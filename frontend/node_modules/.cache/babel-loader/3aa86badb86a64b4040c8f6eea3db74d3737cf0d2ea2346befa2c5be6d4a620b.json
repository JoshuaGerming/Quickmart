{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\OneDrive\\\\Desktop\\\\VScodeProjects\\\\CPSC449-QuickMart\\\\my-app\\\\frontend\\\\src\\\\pages\\\\SettingsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport { toast } from 'react-toastify';\nimport '../assets/css/SettingsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SettingsPage() {\n  _s();\n  const [form, setForm] = useState({\n    username: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    phone: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // 1) Load user profile on mount\n  useEffect(() => {\n    api.get('/auth/me').then(({\n      data\n    }) => {\n      setForm({\n        username: data.username || '',\n        email: data.email || '',\n        firstName: data.firstName || '',\n        lastName: data.lastName || '',\n        phone: data.phone || '',\n        password: '' // always blank\n      });\n      setLoading(false);\n    }).catch(err => {\n      console.error('Settings load error:', err);\n      toast.error('Failed to load profile', {\n        position: 'top-center'\n      });\n      navigate('/login', {\n        replace: true\n      });\n    });\n  }, [navigate]);\n\n  // 2) Handle form field changes\n  const handleChange = e => {\n    setForm(f => ({\n      ...f,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  // 3) Submit updates\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      // Build payload, drop empty password\n      const payload = {\n        ...form\n      };\n      if (!payload.password) delete payload.password;\n      const {\n        data\n      } = await api.put('/auth/me', payload);\n      toast.success('Profile updated!', {\n        position: 'top-center'\n      });\n\n      // Keep form in sync, clear password field\n      setForm(f => ({\n        ...f,\n        password: ''\n      }));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Settings update error:', err.response || err);\n      const msg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Update failed';\n      setError(msg);\n      toast.error(`❌ ${msg}`, {\n        position: 'top-center'\n      });\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"settings-loading\",\n    children: \"Loading\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"settings-form\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this), [{\n        name: 'username',\n        label: 'Username',\n        type: 'text',\n        req: true\n      }, {\n        name: 'email',\n        label: 'Email',\n        type: 'email',\n        req: true\n      }, {\n        name: 'firstName',\n        label: 'First Name',\n        type: 'text',\n        req: false\n      }, {\n        name: 'lastName',\n        label: 'Last Name',\n        type: 'text',\n        req: false\n      }, {\n        name: 'phone',\n        label: 'Phone Number',\n        type: 'tel',\n        req: false\n      }, {\n        name: 'password',\n        label: 'New Password (leave blank)',\n        type: 'password',\n        req: false\n      }].map(({\n        name,\n        label,\n        type,\n        req\n      }) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [label, /*#__PURE__*/_jsxDEV(\"input\", {\n          name: name,\n          type: type,\n          value: form[name],\n          onChange: handleChange,\n          required: req\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(SettingsPage, \"O9DK1PpZITHcznumDvoh2sz3Xw8=\", false, function () {\n  return [useNavigate];\n});\n_c = SettingsPage;\nvar _c;\n$RefreshReg$(_c, \"SettingsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","api","toast","jsxDEV","_jsxDEV","SettingsPage","_s","form","setForm","username","email","firstName","lastName","phone","password","loading","setLoading","error","setError","navigate","get","then","data","catch","err","console","position","replace","handleChange","e","f","target","name","value","handleSubmit","preventDefault","payload","put","success","_err$response","_err$response$data","response","msg","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","req","map","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/joshu/OneDrive/Desktop/VScodeProjects/CPSC449-QuickMart/my-app/frontend/src/pages/SettingsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate }                from 'react-router-dom';\r\nimport api                            from '../services/api';\r\nimport { toast }                      from 'react-toastify';\r\nimport '../assets/css/SettingsPage.css';\r\n\r\nexport default function SettingsPage() {\r\n  const [form, setForm]     = useState({\r\n    username: '', email: '', firstName: '', lastName: '', phone: '', password: ''\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError]     = useState('');\r\n  const navigate              = useNavigate();\r\n\r\n  // 1) Load user profile on mount\r\n  useEffect(() => {\r\n    api.get('/auth/me')\r\n      .then(({ data }) => {\r\n        setForm({\r\n          username:  data.username  || '',\r\n          email:     data.email     || '',\r\n          firstName: data.firstName || '',\r\n          lastName:  data.lastName  || '',\r\n          phone:     data.phone     || '',\r\n          password:  ''              // always blank\r\n        });\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Settings load error:', err);\r\n        toast.error('Failed to load profile', { position: 'top-center' });\r\n        navigate('/login', { replace: true });\r\n      });\r\n  }, [navigate]);\r\n\r\n  // 2) Handle form field changes\r\n  const handleChange = e => {\r\n    setForm(f => ({ ...f, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  // 3) Submit updates\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      // Build payload, drop empty password\r\n      const payload = { ...form };\r\n      if (!payload.password) delete payload.password;\r\n\r\n      const { data } = await api.put('/auth/me', payload);\r\n      toast.success('Profile updated!', { position: 'top-center' });\r\n\r\n      // Keep form in sync, clear password field\r\n      setForm(f => ({ ...f, password: '' }));\r\n\r\n    } catch (err) {\r\n      console.error('Settings update error:', err.response || err);\r\n      const msg = err.response?.data?.message || 'Update failed';\r\n      setError(msg);\r\n      toast.error(`❌ ${msg}`, { position: 'top-center' });\r\n    }\r\n  };\r\n\r\n  if (loading) return <p className=\"settings-loading\">Loading…</p>;\r\n\r\n  return (\r\n    <div className=\"settings-page\">\r\n      <h1>Your Settings</h1>\r\n      <form onSubmit={handleSubmit} className=\"settings-form\">\r\n        {error && <p className=\"error\">{error}</p>}\r\n\r\n        {[\r\n          { name: 'username',  label: 'Username',                  type: 'text',     req: true },\r\n          { name: 'email',     label: 'Email',                     type: 'email',    req: true },\r\n          { name: 'firstName', label: 'First Name',                type: 'text',     req: false },\r\n          { name: 'lastName',  label: 'Last Name',                 type: 'text',     req: false },\r\n          { name: 'phone',     label: 'Phone Number',              type: 'tel',      req: false },\r\n          { name: 'password',  label: 'New Password (leave blank)',type: 'password', req: false }\r\n        ].map(({ name, label, type, req }) => (\r\n          <label key={name}>\r\n            {label}\r\n            <input\r\n              name={name}\r\n              type={type}\r\n              value={form[name]}\r\n              onChange={handleChange}\r\n              required={req}\r\n            />\r\n          </label>\r\n        ))}\r\n\r\n        <button type=\"submit\">Save Changes</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}