{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\OneDrive\\\\Desktop\\\\VScodeProjects\\\\CPSC449-QuickMart\\\\my-app\\\\frontend\\\\src\\\\pages\\\\RegistrationPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport '../assets/css/RegistrationPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationPage() {\n  _s();\n  const [form, setForm] = useState({\n    username: '',\n    password: '',\n    email: '',\n    phone: '',\n    firstName: '',\n    lastName: ''\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const onChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      await api.post('/auth/register', form);\n      alert('Registration successful!');\n      navigate('/login');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Registration failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"registration-form\",\n      children: [['username', 'password', 'email', 'phone', 'firstName', 'lastName'].map(field => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [field[0].toUpperCase() + field.slice(1), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: field,\n          type: field === 'password' ? 'password' : 'text',\n          value: form[field],\n          onChange: onChange,\n          required: ['phone'].indexOf(field) < 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, field, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(RegistrationPage, \"2FaNAhd70nsmv0+XR7hXSLHgYx0=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistrationPage;\nexport default RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["React","useState","useNavigate","api","jsxDEV","_jsxDEV","RegistrationPage","_s","form","setForm","username","password","email","phone","firstName","lastName","error","setError","navigate","onChange","e","target","name","value","handleSubmit","preventDefault","post","alert","err","_err$response","_err$response$data","response","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","field","toUpperCase","slice","type","required","indexOf","_c","$RefreshReg$"],"sources":["C:/Users/joshu/OneDrive/Desktop/VScodeProjects/CPSC449-QuickMart/my-app/frontend/src/pages/RegistrationPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport '../assets/css/RegistrationPage.css';\r\n\r\nfunction RegistrationPage() {\r\n  const [form, setForm] = useState({\r\n    username: '', password: '', email: '', phone: '', firstName: '', lastName: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const onChange = e => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      await api.post('/auth/register', form);\r\n      alert('Registration successful!');\r\n      navigate('/login');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Registration failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"registration-container\">\r\n      <h2>Create an Account</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <form onSubmit={handleSubmit} className=\"registration-form\">\r\n        {['username','password','email','phone','firstName','lastName'].map(field => (\r\n          <label key={field}>\r\n            {field[0].toUpperCase()+field.slice(1)}\r\n            <input\r\n              name={field}\r\n              type={field === 'password' ? 'password' : 'text'}\r\n              value={form[field]}\r\n              onChange={onChange}\r\n              required={['phone'].indexOf(field) < 0}\r\n            />\r\n          </label>\r\n        ))}\r\n        <button type=\"submit\">Create Account</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAO,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC/BS,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,SAAS,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAC7E,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMiB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,QAAQ,GAAGC,CAAC,IAAIX,OAAO,CAAC;IAAE,GAAGD,IAAI;IAAE,CAACY,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;EAAM,CAAC,CAAC;EAE3E,MAAMC,YAAY,GAAG,MAAMJ,CAAC,IAAI;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBR,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAMd,GAAG,CAACuB,IAAI,CAAC,gBAAgB,EAAElB,IAAI,CAAC;MACtCmB,KAAK,CAAC,0BAA0B,CAAC;MACjCT,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOU,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZb,QAAQ,CAAC,EAAAY,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcG,IAAI,cAAAF,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAI,qBAAqB,CAAC;IAChE;EACF,CAAC;EAED,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrC9B,OAAA;MAAA8B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBvB,KAAK,iBAAIX,OAAA;MAAG6B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1ClC,OAAA;MAAMmC,QAAQ,EAAEhB,YAAa;MAACU,SAAS,EAAC,mBAAmB;MAAAC,QAAA,GACxD,CAAC,UAAU,EAAC,UAAU,EAAC,OAAO,EAAC,OAAO,EAAC,WAAW,EAAC,UAAU,CAAC,CAACM,GAAG,CAACC,KAAK,iBACvErC,OAAA;QAAA8B,QAAA,GACGO,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAACD,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC,eACtCvC,OAAA;UACEiB,IAAI,EAAEoB,KAAM;UACZG,IAAI,EAAEH,KAAK,KAAK,UAAU,GAAG,UAAU,GAAG,MAAO;UACjDnB,KAAK,EAAEf,IAAI,CAACkC,KAAK,CAAE;UACnBvB,QAAQ,EAAEA,QAAS;UACnB2B,QAAQ,EAAE,CAAC,OAAO,CAAC,CAACC,OAAO,CAACL,KAAK,CAAC,GAAG;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA,GARQG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACR,CAAC,eACFlC,OAAA;QAAQwC,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAChC,EAAA,CA1CQD,gBAAgB;EAAA,QAKNJ,WAAW;AAAA;AAAA8C,EAAA,GALrB1C,gBAAgB;AA4CzB,eAAeA,gBAAgB;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}